#!/bin/sh
# postinst script for alienvault-prads-mysql
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

OSSIM_SETUP_CONF_FILE="/etc/ossim/ossim_setup.conf"
PROFILES=$(grep -m1 profile "$OSSIM_SETUP_CONF_FILE" | cut -d'=' -f2 || true)
SENSOR_DETECTORS=$(grep "^detectors=" "$OSSIM_SETUP_CONF_FILE" | cut -d'=' -f2 || true)




#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  update_ossim_db
#   DESCRIPTION:  Updates the sensor_properties table with the current prads configuration
#    PARAMETERS:
#       RETURNS:
#-------------------------------------------------------------------------------

update_ossim_db () {

    profiles_needed=$(echo $PROFILES | grep "Server" | grep "Sensor" | grep "Database" || echo "No")
    if [ "$profiles_needed" = "No" ]; then
        echo "One or more required profiles not found. Nothing to do"
        return 0
    fi
    echo "Configuring prads data in database"
    admin_ip=$(grep "^admin_ip=" "$OSSIM_SETUP_CONF_FILE" | cut -d'=' -f2 || echo "Not found")
    if [ "$admin_ip" = "Not found" ]; then
        echo "admin ip not found. Something strange is going on"
        return 0
    fi

    sensor_id=$(echo "SELECT HEX(sensor.id) FROM sensor WHERE sensor.ip = INET6_ATON('$admin_ip');" | ossim-db || echo "Error")

    if [ "$sensor_id" = "Error" ] ; then
        echo "Sensor id not found for $admin_ip"
        return 0
    else
        sensor_id=$(echo $sensor_id | cut -d' ' -f2)
    fi

    prads=0
    if [ -n "$SENSOR_DETECTORS" ]; then
        echo $SENSOR_DETECTORS | grep "prads" > /dev/null && prads=1 || prads=0
        echo "UPDATE sensor_properties SET passive_inventory=$prads WHERE sensor_id=UNHEX('$sensor_id');" | ossim-db
    fi
}


case "$1" in
    configure)
        update_ossim_db
    ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-config-sensor-detectors|alienvault-config-system-admin-ip)
                    update_ossim_db
                    ;;
                *)
                    echo "postinst called with unknown trigger \`$2'">&2
                    exit 1
                    ;;
            esac
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
