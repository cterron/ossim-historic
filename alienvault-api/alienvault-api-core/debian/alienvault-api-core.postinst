#!/bin/sh

set -e

API_DIR="/usr/share/python/alienvault-api-core/bin"
VIRTUALENV_BIN_PATH="$API_DIR/virtual_env_run"
UPDATE_LOG_DIR=/var/log/alienvault/update
ANSIBLE_LOG_DIR=/var/log/alienvault/ansible
DOWNLOADED_BACKUP_DIR=/var/alienvault/backup/downloaded
ANSIBLE_ETC_DIR=/etc/ansible
ANSIBLE_HOSTS_FILE=/etc/ansible/hosts


prepare_dir(){
    if [ ! -z "$2" ]; then
        MODE=$2
    else
        MODE="0750"
    fi
    [ -d "$1" ] || mkdir -p -m "$MODE" "$1"
    chmod "$MODE" "$1"
    chown avapi:alienvault "$1"
}

configure_sudoers(){
    # Check if these lines are available, just in case.
    grep --fixed-strings --quiet "root	ALL=(ALL) ALL" /etc/sudoers || echo "root	ALL=(ALL) ALL" >> /etc/sudoers
    grep --fixed-strings --quiet "%sudo ALL=(ALL) ALL" /etc/sudoers || echo "%sudo ALL=(ALL) ALL" >> /etc/sudoers

    grep --fixed-strings --quiet "avapi ALL=NOPASSWD: /usr/share/python/alienvault-api-core/bin/ansible" /etc/sudoers || echo "avapi ALL=NOPASSWD: /usr/share/python/alienvault-api-core/bin/ansible" >> /etc/sudoers
    grep --fixed-strings --quiet "avapi ALL=NOPASSWD: /usr/bin/sudo" /etc/sudoers || echo "avapi ALL=NOPASSWD: /usr/bin/sudo" >> /etc/sudoers
    grep --fixed-strings --quiet "avapi ALL=NOPASSWD: /bin/sh -c /usr/bin/python /home/avapi/.ansible/tmp/ansible*" /etc/sudoers || echo "avapi ALL=NOPASSWD: /bin/sh -c /usr/bin/python /home/avapi/.ansible/tmp/ansible*" >> /etc/sudoers
    grep --fixed-strings --quiet "avapi ALL=NOPASSWD: /bin/sh -c */usr/bin/md5sum*" /etc/sudoers || echo "avapi ALL=NOPASSWD: /bin/sh -c */usr/bin/md5sum*" >> /etc/sudoers
    grep --fixed-strings --quiet "avapi ALL=NOPASSWD: /bin/sh -c echo */usr/bin/python /home/avapi/.ansible/tmp/ansible-tmp-*" /etc/sudoers || echo "avapi ALL=NOPASSWD: /bin/sh -c echo */usr/bin/python /home/avapi/.ansible/tmp/ansible-tmp-*" >> /etc/sudoers
}

set_system_id(){
    # Set the proper system_id in ansible/keys file.
    ANSIBLE_KEYS_FILE="/etc/ansible/keys"
    UUID=$(/usr/bin/alienvault-system-id)
    grep --fixed-strings --quiet --no-messages "$UUID" "$ANSIBLE_KEYS_FILE" || echo "$UUID" >> "$ANSIBLE_KEYS_FILE"
}

update_ansible_hosts_file(){

    # Add only new admin ip if it doesn't exist
    ADMIN_IP=$(awk -F '=' '/\<admin_ip\>/ {print $2}' /etc/ossim/ossim_setup.conf)
    grep --fixed-strings --quiet --no-messages $ADMIN_IP $ANSIBLE_HOSTS_FILE || echo $ADMIN_IP >> $ANSIBLE_HOSTS_FILE
    chmod 0640 "$ANSIBLE_HOSTS_FILE"
    chown avapi:alienvault "$ANSIBLE_HOSTS_FILE"
}

case "$1" in
    configure)
        # Create user, group and log directories, if needed.
	    if ! getent group alienvault > /dev/null; then
		    addgroup --quiet --system alienvault
	    fi
	    if ! getent passwd avapi > /dev/null; then
            adduser --home /home/avapi --system --shell /bin/bash --ingroup alienvault --gecos "AlienVault API" avapi
	    fi
        # Generate /home/avapi/.ssh
        prepare_dir "/home/avapi/.ssh" "0750"
        if [ -f /home/avapi/.ssh/known_hosts ]
        then
            ssh-keygen -R 127.0.0.1 -f /home/avapi/.ssh/known_hosts
            ssh-keygen -R localhost -f /home/avapi/.ssh/known_hosts
        fi
        ssh-keyscan -t rsa 127.0.0.1 localhost >> /home/avapi/.ssh/known_hosts
        chown avapi:alienvault /home/avapi/.ssh/known_hosts
        chmod 600 /home/avapi/.ssh/known_hosts
        chown -f avapi:alienvault /home/avapi/.ssh/known_hosts.old || true

        chown avapi:alienvault "$VIRTUALENV_BIN_PATH"
        chmod 0750  "$VIRTUALENV_BIN_PATH"

        EVENT_STATS_FOLDER="/var/lib/ossim/rrd/event_stats"
        mkdir -p $EVENT_STATS_FOLDER
        chown avapi:alienvault -R $EVENT_STATS_FOLDER
        chmod 750 -R $EVENT_STATS_FOLDER

        rm -f /etc/ansible/facts.d/avalaible_plugins.fact
        rm -f /etc/ansible/facts.d/enabled_plugins.fact
        rm -f /etc/ansible/facts.d/alienvault_center.fact

        # Set log file permissions
        API_LOG_DIR="/var/log/alienvault/api"
        API_LOG="$API_LOG_DIR/api.log"
        API_BACKUP_NOTIF_LOG="$API_LOG_DIR/backup-notifications.log"
        API_LOGGER_NOTIF_LOG="$API_LOG_DIR/logger-notifications.log"
        [ -d "$API_LOG_DIR" ] || mkdir -p -m 0750 "$API_LOG_DIR"
        for logfile in $API_LOG $API_BACKUP_NOTIF_LOG $API_LOGGER_NOTIF_LOG
        do
            [ -f "$logfile" ] || touch "$logfile"
            chmod 644 "$logfile"*
        done
        chown avapi:alienvault $API_LOG_DIR -R

        prepare_dir "$UPDATE_LOG_DIR"
        prepare_dir "$ANSIBLE_LOG_DIR"
        prepare_dir "$DOWNLOADED_BACKUP_DIR" "0770"
        prepare_dir "$ANSIBLE_ETC_DIR" "0750"
        chown -R avapi:alienvault "$ANSIBLE_ETC_DIR"
        configure_sudoers
    ;;

    triggered)
        for trigger in $2
        do
            case "$trigger" in
                alienvault-config-system-admin-ip)
                    update_ansible_hosts_file
            esac
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
