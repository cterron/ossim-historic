#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# License:
#
#    Copyright (c) 2003-2006 ossim.net
#    Copyright (c) 2007-2013 AlienVault
#    All rights reserved.
#
#    This package is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; version 2 dated June, 1991.
#    You may not use, modify or distribute this program under any other version
#    of the GNU General Public License.
#
#    This package is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this package; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
#    MA  02110-1301  USA
#
#
# On Debian GNU/Linux systems, the complete text of the GNU General
# Public License can be found in `/usr/share/common-licenses/GPL-2'.
#
# Otherwise you can read it here: http://www.gnu.org/licenses/gpl-2.0.txt
VERSION="0.0.1"
DOCUMENTATION = """
author: Cristobal Rosa <crosa@alienvault.com>
module: av_query_ossim_db
short_description: Run a query over a ossim-db 
description:
    - This module is useful for query the ossim-db
version_added: "%s"
options:
  host:
    description:
      - The mysql server
    default: 'localhost'
    required: false
  port:
    description:
      - The mysql server port
    default: '3306'
    required: false
    version_added: "1.0"
  user:
    description:
      - The smtp server user 
    required: false
  passwd:
    description:
      - The smtp server user's password
    required: false
""" % VERSION
EXAMPLES= """
"""
import json
import MySQLdb
import MySQLdb.cursors
import base64
import os

def get_json_from_query(querydata):
    objlist = []
    for row in querydata:
        d = {}
        for key,value in row.iteritems():
            #json is transmitted as utf8. 
            #Binary data should by encoded. so... encode all fields
            d[key] = base64.b64encode(str(value))
        objlist.append(d)
    return json.dumps(objlist)

def main():
    module = AnsibleModule(
                           argument_spec=dict(
                                            host = dict(default='localhost'),
                                            port = dict(default='3306'),
                                            user = dict(default='root'),
                                            database =dict(default="alienvault"),
                                            passwd = dict(default=None),    
                                            query = dict(required=True)                            
                                              ))
    host = module.params.get('host')
    port = module.params.get('port')
    user = module.params.get('user')
    passwd = module.params.get('passwd')
    query = module.params.get('query')
    database = module.params.get('database')
    try:
        conn =  MySQLdb.connect(host=host, user=user, passwd=passwd, port=int(port),\
                                         db=database, cursorclass=MySQLdb.cursors.DictCursor)
        conn.autocommit(True)
        cursor = conn.cursor()
        cursor.execute(query)
        arr = cursor.fetchall()
        cursor.close()
        conn.close()
        module.exit_json(changed=True, dataset=get_json_from_query(arr))
    except Exception,e:
        module.fail_json(rc=1, msg=str(e))          
    
# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()

# vim:ts=4 sts=4 tw=79 expandtab:
